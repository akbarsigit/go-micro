version: "3"

services:
  broker-services:
    image: akbarsigit/broker-service:1.0.0
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  listener-services:
    image: akbarsigit/listener-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    images: akbarsigit/authentication-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    image: akbarsigit/logger-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  mail-service:
    image: akbarsigit/mail-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME": ""
      MAIL_PASSWORD": ""
      MAIL_ENCRYPTION": none
      FROM_NAME": "akbar"
      FROM_ADDRESS": "akbar@example.com"

  rabbitmq:
    image: "rabbitmq:3.9-alpine"
    deploy:
      mode: global

  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "8025:8025"
    deploy:
      mode: global

  mongo:
    image: "mongo:4.2.16-bionic"
    ports:
      - "27017:27017"
    deploy:
      mode: global
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  postgres:
    image: "postgres:14.0"
    ports:
      - "5432:5432"
    restart: always
    deploy: # (optional)
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes: # to have persistent data on the database. local: docker
      - ./db-data/postgres/:/var/lib/postgresql/data/
